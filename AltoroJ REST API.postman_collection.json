{
	"info": {
		"_postman_id": "507ecc2f-397e-4190-b667-554ce1ab518c",
		"name": "AltoroJ REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5040522",
		"_collection_link": "https://kiranmm.postman.co/workspace/PRELUDE-SYS~2c4d429f-f21f-4b6e-91be-44db94a34fa3/collection/5040522-507ecc2f-397e-4190-b667-554ce1ab518c?action=share&source=collection_link&creator=5040522"
	},
	"item": [
		{
			"name": "login",
			"item": [
				{
					"name": "Check if any user is logged in",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code=200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received & valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"loggedin\");\r",
									"    pm.response.to.have.jsonBody();\r",
									"    pm.expect(pm.response.json().loggedin).to.be.oneOf([\"true\",\"false\"]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer YW5OdGFYUm86WkdWdGJ6RXlNelE9Oj84P3YlPz8=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						},
						"description": "If a user is loggedin the username will be returned"
					},
					"response": [
						{
							"name": "Logged in",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Logged out",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Login method",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code=200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received & valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Authorization\");\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"    pm.expect(pm.response.json().success).to.equal(\"jsmith is now logged in\");\r",
									"    pm.response.to.have.jsonBody();\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"jsmith\",\n  \"password\": \"demo1234\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						},
						"description": "After a successful login a token is returned. This is a Bearer token. To authenticate with it use the Authorization header and set value to Bearer empty space and the token value."
					},
					"response": [
						{
							"name": "Success message when login is complete",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad parameters: Please check provided values",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error: Please see error message or logs for details",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "account",
			"item": [
				{
					"name": "{accountNo}",
					"item": [
						{
							"name": "transactions",
							"item": [
								{
									"name": "show Last Ten Transactions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Verify if response code=200 OK\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Verify if response body is received & valid\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"last_10_transactions\");\r",
													"    pm.response.to.have.jsonBody();\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer YW5OdGFYUm86WkdWdGJ6RXlNelE9Oj84P3YlPz8=",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/800002/transactions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"800002",
												"transactions"
											]
										},
										"description": "Returns the last 10 transactions attached to an account"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:accountNo/transactions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":accountNo",
														"transactions"
													],
													"variable": [
														{
															"key": "accountNo"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:accountNo/transactions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":accountNo",
														"transactions"
													],
													"variable": [
														{
															"key": "accountNo"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/account/:accountNo/transactions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":accountNo",
														"transactions"
													],
													"variable": [
														{
															"key": "accountNo"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "get Transactions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Verify if response code=200 OK\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Verify if response body is received & valid\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"transactions\");\r",
													"    pm.response.to.have.jsonBody();\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer YW5OdGFYUm86WkdWdGJ6RXlNelE9Oj84P3YlPz8=",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"startDate\": \"2018-01-01\",\n  \"endDate\": \"2024-07-01\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/account/800003/transactions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"800003",
												"transactions"
											]
										},
										"description": "Return transactions between 2 specific dates"
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:accountNo/transactions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":accountNo",
														"transactions"
													],
													"variable": [
														{
															"key": "accountNo"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad parameters: Please check provided values",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:accountNo/transactions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":accountNo",
														"transactions"
													],
													"variable": [
														{
															"key": "accountNo"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:accountNo/transactions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":accountNo",
														"transactions"
													],
													"variable": [
														{
															"key": "accountNo"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/account/:accountNo/transactions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"account",
														":accountNo",
														"transactions"
													],
													"variable": [
														{
															"key": "accountNo"
														}
													]
												}
											},
											"status": "Not Implemented",
											"code": 501,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "get Account Balance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code=200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if response body is received & valid\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"accountId\");\r",
											"    pm.expect(pm.response.text()).to.include(\"balance\");\r",
											"    pm.expect(pm.response.text()).to.include(\"credits\");\r",
											"    pm.response.to.have.jsonBody();\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer YW5OdGFYUm86WkdWdGJ6RXlNelE9Oj84P3YlPz8=",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/800002",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"800002"
									]
								},
								"description": "Returns details about a specific account"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/:accountNo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":accountNo"
											],
											"variable": [
												{
													"key": "accountNo"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/:accountNo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":accountNo"
											],
											"variable": [
												{
													"key": "accountNo"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/account/:accountNo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												":accountNo"
											],
											"variable": [
												{
													"key": "accountNo"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "get Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code=200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received & valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Accounts\");\r",
									"    pm.expect(pm.response.text()).to.include(\"Name\");\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.response.to.have.jsonBody();\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer YW5OdGFYUm86WkdWdGJ6RXlNelE9Oj84P3YlPz8=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account"
							]
						},
						"description": "Returns a list of all the accounts owned by the user"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "transfer",
			"item": [
				{
					"name": "trasnfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code=200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received & valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"success\");\r",
									"    pm.expect(pm.response.text()).to.include(\"successfully transferred from Account\");\r",
									"    pm.response.to.have.jsonBody();\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer YW5OdGFYUm86WkdWdGJ6RXlNelE9Oj84P3YlPz8=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"toAccount\": \"800002\",\n  \"fromAccount\": \"800003\",\n  \"transferAmount\": \"9999\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transfer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfer"
							]
						},
						"description": "Transfer money between two accounts"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"toAccount\": \"<string>\",\n  \"fromAccount\": \"<string>\",\n  \"transferAmount\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad parameters: Please check provided values",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"toAccount\": \"<string>\",\n  \"fromAccount\": \"<string>\",\n  \"transferAmount\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"toAccount\": \"<string>\",\n  \"fromAccount\": \"<string>\",\n  \"transferAmount\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transfer"
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "feedback",
			"item": [
				{
					"name": "submit",
					"item": [
						{
							"name": "send Feedback",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code=200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if response body is received & valid\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"comments\");\r",
											"    pm.expect(pm.response.text()).to.include(\"subject\");\r",
											"    pm.expect(pm.response.text()).to.include(\"name\");\r",
											"    pm.expect(pm.response.text()).to.include(\"email\");\r",
											"    pm.response.to.have.jsonBody();\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer YW5OdGFYUm86WkdWdGJ6RXlNelE9Oj84P3YlPz8=",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"John Smith\",\n  \"email\": \"john.smith@gmail.com\",\n  \"subject\": \"Transfer Money Process\",\n  \"message\": \"The money transfer is seamless and quick enough, appreciate the banking facilities!\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/feedback/submit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"feedback",
										"submit"
									]
								},
								"description": "Submit feedback for the bank"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"email\": \"<email>\",\n  \"subject\": \"<string>\",\n  \"message\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/feedback/submit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"feedback",
												"submit"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"email\": \"<email>\",\n  \"subject\": \"<string>\",\n  \"message\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/feedback/submit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"feedback",
												"submit"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"email\": \"<email>\",\n  \"subject\": \"<string>\",\n  \"message\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/feedback/submit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"feedback",
												"submit"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{feedbackId}",
					"item": [
						{
							"name": "get Feedback",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer YW5OdGFYUm86WkdWdGJ6RXlNelE9Oj84P3YlPz8=",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/feedback/:feedbackId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"feedback",
										":feedbackId"
									],
									"variable": [
										{
											"key": "feedbackId",
											"value": ""
										}
									]
								},
								"description": "Retrieve feedback"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/feedback/:feedbackId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"feedback",
												":feedbackId"
											],
											"variable": [
												{
													"key": "feedbackId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad parameters: Please check provided values",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/feedback/:feedbackId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"feedback",
												":feedbackId"
											],
											"variable": [
												{
													"key": "feedbackId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/feedback/:feedbackId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"feedback",
												":feedbackId"
											],
											"variable": [
												{
													"key": "feedbackId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/feedback/:feedbackId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"feedback",
												":feedbackId"
											],
											"variable": [
												{
													"key": "feedbackId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "admin",
			"item": [
				{
					"name": "addUser",
					"item": [
						{
							"name": "add User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code=200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if response body is received & valid\", function () {\r",
											"    pm.expect(pm.response.json().success).to.equal(\"Requested operation has completed successfully.\")\r",
											"    pm.response.to.have.jsonBody();\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer YW5OdGFYUm86WkdWdGJ6RXlNelE9Oj84P3YlPz8=",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"firstname\": \"Tiger\",\n  \"lastname\": \"Lion\",\n  \"username\": \"tigerLion\",\n  \"password1\": \"jungle\",\n  \"password2\": \"jungle\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/addUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"addUser"
									]
								},
								"description": "Add new user"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password1\": \"<string>\",\n  \"password2\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/admin/addUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"addUser"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password1\": \"<string>\",\n  \"password2\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/admin/addUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"addUser"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password1\": \"<string>\",\n  \"password2\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/admin/addUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"addUser"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Error creating user",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password1\": \"<string>\",\n  \"password2\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/admin/addUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"addUser"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "changePassword",
					"item": [
						{
							"name": "change Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if response code=200 OK\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify if response body is received & valid\", function () {\r",
											"    pm.expect(pm.response.json().success).to.equal(\"Requested operation has completed successfully.\")\r",
											"    pm.response.to.have.jsonBody();\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer YW5OdGFYUm86WkdWdGJ6RXlNelE9Oj84P3YlPz8=",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"tigerLion\",\n  \"password2\": \"tigerLion\",\n  \"password1\": \"tigerLion\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/admin/changePassword",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"admin",
										"changePassword"
									]
								},
								"description": "Change user password"
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"password2\": \"<string>\",\n  \"password1\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/admin/changePassword",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"changePassword"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"password2\": \"<string>\",\n  \"password1\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/admin/changePassword",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"changePassword"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"password2\": \"<string>\",\n  \"password1\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/admin/changePassword",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"changePassword"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Error in changing the username password",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"<string>\",\n  \"password2\": \"<string>\",\n  \"password1\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/admin/changePassword",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"admin",
												"changePassword"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "logout",
			"item": [
				{
					"name": "do Log Out",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code=200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is received & valid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"LoggedOut\");\r",
									"    pm.response.to.have.jsonBody();\r",
									"    pm.expect(pm.response.json().LoggedOut).to.be.oneOf([\"True\",\"False\"]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer YW5OdGFYUm86WkdWdGJ6RXlNelE9Oj84P3YlPz8=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logout"
							]
						},
						"description": "Logout from the bank"
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized request ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logout"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://testfire.net/api"
		}
	]
}