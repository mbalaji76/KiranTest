{
	"info": {
		"_postman_id": "798e8cdf-a57a-4fc8-ad65-c12bb239f532",
		"name": "AltoroJ REST API - E2E test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5040522",
		"_collection_link": "https://kiranmm.postman.co/workspace/PRELUDE-SYS~2c4d429f-f21f-4b6e-91be-44db94a34fa3/collection/5040522-798e8cdf-a57a-4fc8-ad65-c12bb239f532?action=share&source=collection_link&creator=5040522"
	},
	"item": [
		{
			"name": "Login method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if response code=200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is received & valid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Authorization\");\r",
							"    pm.expect(pm.response.text()).to.include(\"success\");\r",
							"    pm.expect(pm.response.json().success).to.equal(\"jsmith is now logged in\");\r",
							"    pm.response.to.have.jsonBody();\r",
							"});\r",
							"\r",
							"// API CHAINING AUTOMATION CODE\r",
							"\r",
							"var jsonBody=pm.response.json();\r",
							"var accessToken = jsonBody.Authorization;\r",
							"pm.globals.set(\"globalAccessToken\", accessToken);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"jsmith\",\n  \"password\": \"demo1234\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				},
				"description": "After a successful login a token is returned. This is a Bearer token. To authenticate with it use the Authorization header and set value to Bearer empty space and the token value."
			},
			"response": [
				{
					"name": "Success message when login is complete",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad parameters: Please check provided values",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error: Please see error message or logs for details",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Check if any user is logged in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if response code=200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is received & valid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"loggedin\");\r",
							"    pm.response.to.have.jsonBody();\r",
							"    pm.expect(pm.response.json().loggedin).to.be.oneOf([\"true\",\"false\"]);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the user is logged in\", function () {\r",
							"    pm.expect(pm.response.json().loggedin).to.equal(\"true\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{globalAccessToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				},
				"description": "If a user is loggedin the username will be returned"
			},
			"response": [
				{
					"name": "Logged in",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Logged out",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "get Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if response code=200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is received & valid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Accounts\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Name\");\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"    pm.response.to.have.jsonBody();\r",
							"});\r",
							"\r",
							"// EXTRACT THE ACCOUNT NUMBER\r",
							"\r",
							"var jsonBody = pm.response.json();\r",
							"var savingsAccountID = jsonBody.Accounts[0].id;\r",
							"pm.globals.set(\"globalSavingsAccountID\", savingsAccountID);\r",
							"\r",
							"var checkingAccountID = jsonBody.Accounts[1].id;\r",
							"pm.globals.set(\"globalCheckingAccountID\", checkingAccountID);\r",
							"\r",
							"var creditCardAccountID = jsonBody.Accounts[2].id;\r",
							"pm.globals.set(\"globalCreditCardAccountID\", creditCardAccountID);\r",
							"\r",
							"// for Savings account, the json path is x.Accounts[0].id\r",
							"// for Checking account, the json path is x.Accounts[1].id\r",
							"// for Credit Card account, the json path is x.Accounts[2].id"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{globalAccessToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/account",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"account"
					]
				},
				"description": "Returns a list of all the accounts owned by the user"
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized request",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "get Account Balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if response code=200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is received & valid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"accountId\");\r",
							"    pm.expect(pm.response.text()).to.include(\"balance\");\r",
							"    pm.expect(pm.response.text()).to.include(\"credits\");\r",
							"    pm.response.to.have.jsonBody();\r",
							"});\r",
							"\r",
							"// VERIFY IF ACCOUNT-ID IS THE EXTRACTED ID\r",
							"\r",
							"pm.test(\"Verify if account-id=extracted account id : \"+pm.globals.get(\"globalSavingsAccountID\"), function () {\r",
							"    var jsonBody = pm.response.json();\r",
							"    pm.expect(jsonBody.accountId).to.eql(pm.globals.get(\"globalSavingsAccountID\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{globalAccessToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/account/{{globalSavingsAccountID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"account",
						"{{globalSavingsAccountID}}"
					]
				},
				"description": "Returns details about a specific account"
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account/:accountNo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								":accountNo"
							],
							"variable": [
								{
									"key": "accountNo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized request",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account/:accountNo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								":accountNo"
							],
							"variable": [
								{
									"key": "accountNo"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account/:accountNo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								":accountNo"
							],
							"variable": [
								{
									"key": "accountNo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "get Transactions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if response code=200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is received & valid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"transactions\");\r",
							"    pm.response.to.have.jsonBody();\r",
							"});\r",
							"\r",
							"// VERIFY IF ACCOUNT-ID IS THE EXTRACTED ID\r",
							"\r",
							"pm.test(\"Verify if account-id=extracted account id : \"+pm.globals.get(\"globalSavingsAccountID\"), function () {\r",
							"    var jsonBody = pm.response.json();\r",
							"    pm.expect(jsonBody.transactions[0].account).to.eql(pm.globals.get(\"globalSavingsAccountID\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{globalAccessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"startDate\": \"2018-01-01\",\n  \"endDate\": \"2024-07-01\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/account/{{globalSavingsAccountID}}/transactions",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"account",
						"{{globalSavingsAccountID}}",
						"transactions"
					]
				},
				"description": "Return transactions between 2 specific dates"
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/account/:accountNo/transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								":accountNo",
								"transactions"
							],
							"variable": [
								{
									"key": "accountNo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad parameters: Please check provided values",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/account/:accountNo/transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								":accountNo",
								"transactions"
							],
							"variable": [
								{
									"key": "accountNo"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/account/:accountNo/transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								":accountNo",
								"transactions"
							],
							"variable": [
								{
									"key": "accountNo"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"startDate\": \"<date>\",\n  \"endDate\": \"<date>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/account/:accountNo/transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								":accountNo",
								"transactions"
							],
							"variable": [
								{
									"key": "accountNo"
								}
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "transfer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if response code=200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is received & valid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"success\");\r",
							"    pm.expect(pm.response.text()).to.include(\"successfully transferred from Account\");\r",
							"    pm.response.to.have.jsonBody();\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{globalAccessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"toAccount\": \"{{globalCheckingAccountID}}\",\n  \"fromAccount\": \"{{globalSavingsAccountID}}\",\n  \"transferAmount\": \"{{$randomInt}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/transfer",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transfer"
					]
				},
				"description": "Transfer money between two accounts"
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"toAccount\": \"<string>\",\n  \"fromAccount\": \"<string>\",\n  \"transferAmount\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transfer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfer"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad parameters: Please check provided values",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"toAccount\": \"<string>\",\n  \"fromAccount\": \"<string>\",\n  \"transferAmount\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transfer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfer"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"toAccount\": \"<string>\",\n  \"fromAccount\": \"<string>\",\n  \"transferAmount\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transfer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transfer"
							]
						}
					},
					"status": "Not Implemented",
					"code": 501,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "show Last Ten Transactions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if response code=200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is received & valid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"last_10_transactions\");\r",
							"    pm.response.to.have.jsonBody();\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{globalAccessToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/account/{{globalSavingsAccountID}}/transactions",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"account",
						"{{globalSavingsAccountID}}",
						"transactions"
					]
				},
				"description": "Returns the last 10 transactions attached to an account"
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account/:accountNo/transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								":accountNo",
								"transactions"
							],
							"variable": [
								{
									"key": "accountNo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized request",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account/:accountNo/transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								":accountNo",
								"transactions"
							],
							"variable": [
								{
									"key": "accountNo"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account/:accountNo/transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								":accountNo",
								"transactions"
							],
							"variable": [
								{
									"key": "accountNo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "add User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if response code=200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is received & valid\", function () {\r",
							"    pm.expect(pm.response.json().success).to.equal(\"Requested operation has completed successfully.\")\r",
							"    pm.response.to.have.jsonBody();\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{globalAccessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstname\": \"{{$randomFirstName}}\",\n  \"lastname\": \"{{$randomLastName}}\",\n  \"username\": \"{{$randomUserName}}\",\n  \"password1\": \"demouser1234\",\n  \"password2\": \"demouser1234\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/addUser",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"addUser"
					]
				},
				"description": "Add new user"
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password1\": \"<string>\",\n  \"password2\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/addUser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"addUser"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password1\": \"<string>\",\n  \"password2\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/addUser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"addUser"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password1\": \"<string>\",\n  \"password2\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/addUser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"addUser"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Error creating user",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password1\": \"<string>\",\n  \"password2\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/addUser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"addUser"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "change Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if response code=200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is received & valid\", function () {\r",
							"    pm.expect(pm.response.json().success).to.equal(\"Requested operation has completed successfully.\")\r",
							"    pm.response.to.have.jsonBody();\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{globalAccessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"tigerLion\",\n  \"password2\": \"tigerLion\",\n  \"password1\": \"tigerLion\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/changePassword",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"changePassword"
					]
				},
				"description": "Change user password"
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password2\": \"<string>\",\n  \"password1\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/changePassword",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"changePassword"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password2\": \"<string>\",\n  \"password1\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/changePassword",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"changePassword"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password2\": \"<string>\",\n  \"password1\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/changePassword",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"changePassword"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Error in changing the username password",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password2\": \"<string>\",\n  \"password1\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/changePassword",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"changePassword"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "send Feedback",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if response code=200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is received & valid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"comments\");\r",
							"    pm.expect(pm.response.text()).to.include(\"subject\");\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"    pm.expect(pm.response.text()).to.include(\"email\");\r",
							"    pm.response.to.have.jsonBody();\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{globalAccessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"{{$randomFirstName}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"subject\": \"{{$randomWords}}\",\n  \"message\": \"{{$randomLoremText}}\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/feedback/submit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"feedback",
						"submit"
					]
				},
				"description": "Submit feedback for the bank"
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"email\": \"<email>\",\n  \"subject\": \"<string>\",\n  \"message\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/feedback/submit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"feedback",
								"submit"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized request",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"email\": \"<email>\",\n  \"subject\": \"<string>\",\n  \"message\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/feedback/submit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"feedback",
								"submit"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"email\": \"<email>\",\n  \"subject\": \"<string>\",\n  \"message\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/feedback/submit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"feedback",
								"submit"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "get Feedback",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{globalAccessToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/feedback/:feedbackId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"feedback",
						":feedbackId"
					],
					"variable": [
						{
							"key": "feedbackId",
							"value": ""
						}
					]
				},
				"description": "Retrieve feedback"
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/feedback/:feedbackId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"feedback",
								":feedbackId"
							],
							"variable": [
								{
									"key": "feedbackId"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad parameters: Please check provided values",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/feedback/:feedbackId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"feedback",
								":feedbackId"
							],
							"variable": [
								{
									"key": "feedbackId"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized request",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/feedback/:feedbackId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"feedback",
								":feedbackId"
							],
							"variable": [
								{
									"key": "feedbackId"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Internal server error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/feedback/:feedbackId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"feedback",
								":feedbackId"
							],
							"variable": [
								{
									"key": "feedbackId"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "do Log Out",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if response code=200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is received & valid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"LoggedOut\");\r",
							"    pm.response.to.have.jsonBody();\r",
							"    pm.expect(pm.response.json().LoggedOut).to.be.oneOf([\"True\",\"False\"]);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the user is logged out\", function () {\r",
							"    pm.expect(pm.response.json().LoggedOut).to.equal(\"True\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{globalAccessToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/logout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"logout"
					]
				},
				"description": "Logout from the bank"
			},
			"response": [
				{
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Unauthorized request ",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://testfire.net/api"
		}
	]
}